plugins {
	id 'org.springframework.boot' version '3.0.5'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'java'
	id "org.barfuin.gradle.taskinfo" version "2.1.0" // https://gitlab.com/barfuin/gradle-taskinfo
	id "com.github.spotbugs" version '5.0.14'
	id 'checkstyle'
	id 'pmd'
	id 'jacoco'
}

group = 'org.baps.api'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = JavaVersion.VERSION_17

ext {
	snippetsDir = file('build/generated-snippets')
	excludeFilesFromJacoco = [] // TODO: INCLUDE FILES TO BE EXCLUDED FROM JaCoCo
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// Springboot Starter
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// Database
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.postgresql:postgresql'
	implementation 'org.flywaydb:flyway-core:9.16.1'

	// RSQL / FIQL
	implementation 'io.github.perplexhub:rsql-jpa-spring-boot-starter:6.0.4'

	// Resilience
	implementation 'io.github.resilience4j:resilience4j-spring-boot2:2.0.2'
	implementation 'com.giffing.bucket4j.spring.boot.starter:bucket4j-spring-boot-starter:0.9.0'

	// Cache
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	// Utility
	implementation 'io.micrometer:micrometer-registry-prometheus:1.10.6'
	implementation 'com.github.spotbugs:spotbugs-annotations:4.7.3'
	implementation 'jakarta.validation:jakarta.validation-api:3.0.2'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	implementation 'org.mapstruct:mapstruct:1.5.3.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'

	implementation 'commons-beanutils:commons-beanutils:1.9.4'

	// Documentation
	implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0"

	// Test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'com.h2database:h2:2.1.214'
	
	//DevTools
	compileOnly "org.springframework.boot:spring-boot-devtools"

	// https://mvnrepository.com/artifact/com.auth0/java-jwt
	implementation group: 'com.auth0', name: 'java-jwt', version: '4.2.1'
	
	implementation 'org.springframework.boot:spring-boot-starter-security'

	// https://mvnrepository.com/artifact/com.vladmihalcea/hibernate-types-60
	implementation 'com.vladmihalcea:hibernate-types-60:2.21.1'

}

// Do not build plain archive
// https://docs.spring.io/spring-boot/docs/2.6.6/gradle-plugin/reference/htmlsingle/#packaging-executable.and-plain-archives
tasks.named("jar") {
	enabled = false
}

tasks.named('test') {
	useJUnitPlatform()
	outputs.dir snippetsDir
}

test {
	finalizedBy jacocoTestReport
}

spotbugsMain {
	reports {
		html {
			required = true
			outputLocation = file("$buildDir/reports/spotbugs/main/spotbugs.html")
			stylesheet = 'fancy-hist.xsl'
		}
	}
}

spotbugsTest {
	reports {
		html {
			required = true
			outputLocation = file("$buildDir/reports/spotbugs/test/spotbugs.html")
			stylesheet = 'fancy-hist.xsl'
		}
	}
}

pmd {
	toolVersion = '6.49.0'
	ruleSetConfig = rootProject.resources.text.fromFile('config/pmd/ruleset.xml')
	ignoreFailures = true

	pmdMain {
		excludes = [
		        '**/*Application.*'
		]
	}

	pmdTest {
		excludes = [
		        '**/*ApplicationTests.*'
		]
	}
}

jacoco {
	toolVersion = "0.8.8"
	reportsDirectory = file("$buildDir/reports/jacoco")
}

jacocoTestReport {
	dependsOn test
	afterEvaluate {
		classDirectories.setFrom(
				files(classDirectories.files.collect {
					fileTree(dir: it, exclude: excludeFilesFromJacoco)})
		)
	}
}

jacocoTestCoverageVerification {
	afterEvaluate {
		classDirectories.setFrom(
				files(classDirectories.files.collect {
					fileTree(dir: it, exclude: excludeFilesFromJacoco)})
		)
	}

	violationRules {
		rule {
			limit {
				minimum = 0.00
			}
		}
	}
}

check.dependsOn jacocoTestCoverageVerification

